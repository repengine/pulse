version: '3.8'

services:
  forecast_engine:
    build:
      context: .
      dockerfile: Dockerfile.forecast_engine
    command: python -m forecast_engine.forecast_batch_runner
    ports:
      - "8000:8000"
    depends_on:
      - redis

  simulation_engine:
    build:
      context: .
      dockerfile: Dockerfile.simulation_engine
    command: python -m engine.batch_runner
    depends_on:
      - redis

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    command: celery -A core.celery_app worker --loglevel=info
    depends_on:
      - redis

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  mlflow:
    image: crflynn/mlflow
    environment:
      BACKEND_STORE_URI: sqlite:///mlflow.db
      ARTIFACT_ROOT: /mlflow/artifacts
    volumes:
      - ./mlflow:/mlflow
    ports:
      - "5000:5000"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"